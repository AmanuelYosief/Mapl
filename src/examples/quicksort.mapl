// inputs: 0
// output: 1 3 5 7 9
proc main() {
/* See Wikipedia page for the quicksort algorithm. */
  arrayof(int) a;
  a = new arrayof(int)[5];
  a[0] = 9;
  a[1] = 1;
  a[2] = 3;
  a[3] = 7;
  a[4] = 5;
  sort(a);
  int i;
  i = 0;
  while (i < (a.length)) do {
    output a[i];
    outchar 32;
    i = i + 1;
  }
  outchar 13;
  outchar 10;
}

proc sort(arrayof(int) a) {
  quicksort(a, 0, (a.length) - 1);
}

proc quicksort(arrayof(int) a, int lo, int hi) {
  if (lo < hi) then {
    int p;
    p = partition(a, lo, hi);
    quicksort(a, lo, p - 1);
    quicksort(a, p + 1, hi);
  } else {}
}

fun int partition(arrayof(int) a, int lo, int hi) {
  int pivot;
  pivot = a[hi];
  int i;
  i = lo; // place for swapping
  int j;
  j = lo;
  while (j < hi) do {
    if ((a[j]) < (pivot + 1)) then {
      swap(a, i, j);
      i = i + 1;
    } else {}
    j = j + 1;
  }
  swap(a, i, hi);
  return i;
}

proc swap(arrayof(int) a, int i, int j) {
  int x;
  x = a[i];
  a[i] = a[j];
  a[j] = x;
}
